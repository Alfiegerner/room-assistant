(self.webpackChunkroom_assistant=self.webpackChunkroom_assistant||[]).push([[620],{7100:(n,s,t)=>{"use strict";t.r(s),t.d(s,{data:()=>e});const e={key:"v-b9bf0f00",path:"/integrations/shell.html",title:"Shell Commands",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Settings",slug:"settings",children:[{level:3,title:"Sensors",slug:"sensors",children:[]},{level:3,title:"Switches",slug:"switches",children:[]}]}],filePathRelative:"integrations/shell.md",git:{updatedTime:1622398265e3,contributors:[]}}},4195:(n,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>x});var e=t(6252);const a=(0,e.uE)('<h1 id="shell-commands"><a class="header-anchor" href="#shell-commands">#</a> Shell Commands</h1><p><strong>Integration Key:</strong> <code>shell</code></p><p>The Shell integration allows you to execute any shell command on a schedule and use the output as the state of a sensor. This is useful for passing metrics about the machine that room-assistant is running on or for integrating sensors that do not have native support.</p><p>The commands are run with the same user that room-assistant is running with, so make sure your permissions are setup accordingly.</p><h2 id="settings"><a class="header-anchor" href="#settings">#</a> Settings</h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>sensors</code></td><td><a href="#sensors">Shell Sensors</a></td><td></td><td>An array of shell sensor definitions.</td></tr><tr><td><code>switches</code></td><td><a href="#switches">Shell Switches</a></td><td></td><td>An array of shell switch definitions.</td></tr></tbody></table><h3 id="sensors"><a class="header-anchor" href="#sensors">#</a> Sensors</h3>',7),l=(0,e.Wm)("thead",null,[(0,e.Wm)("tr",null,[(0,e.Wm)("th",null,"Name"),(0,e.Wm)("th",null,"Type"),(0,e.Wm)("th",null,"Default"),(0,e.Wm)("th",null,"Description")])],-1),o=(0,e.Wm)("tr",null,[(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"name")]),(0,e.Wm)("td",null,"String"),(0,e.Wm)("td"),(0,e.Wm)("td",null,"Friendly name of this sensor.")],-1),r=(0,e.Wm)("tr",null,[(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"command")]),(0,e.Wm)("td",null,"String"),(0,e.Wm)("td"),(0,e.Wm)("td",null,"Shell command that should be executed.")],-1),d=(0,e.Wm)("tr",null,[(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"regex")]),(0,e.Wm)("td",null,"String"),(0,e.Wm)("td"),(0,e.Wm)("td",null,"Regex that is used for parsing the stdout output of the command, if configured. Otherwise the complete output is used as the state.")],-1),i=(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"cron")],-1),u=(0,e.Wm)("td",null,"String",-1),c=(0,e.Wm)("td",null,null,-1),p={href:"https://www.npmjs.com/package/node-cron#cron-syntax",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Uk)("Cron pattern"),h=(0,e.Uk)(" describing the schedule that this command should be run with."),k=(0,e.Wm)("tr",null,[(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"icon")]),(0,e.Wm)("td",null,"String"),(0,e.Wm)("td"),(0,e.Wm)("td",null,"Icon that the sensor should be represented with in Home Assistant Core.")],-1),g=(0,e.Wm)("tr",null,[(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"unitOfMeasurement")]),(0,e.Wm)("td",null,"String"),(0,e.Wm)("td"),(0,e.Wm)("td",null,"Unit of measurement of the sensor state, leave empty if none.")],-1),b=(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"deviceClass")],-1),W=(0,e.Wm)("td",null,"String",-1),f=(0,e.Wm)("td",null,null,-1),y=(0,e.Uk)("Home Assistant Core "),w={href:"https://www.home-assistant.io/integrations/sensor/#device-class",target:"_blank",rel:"noopener noreferrer"},S=(0,e.Uk)("device class"),v=(0,e.Uk)(" to be used for this sensor."),C=(0,e.uE)('<h3 id="switches"><a class="header-anchor" href="#switches">#</a> Switches</h3><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td>String</td><td></td><td>Friendly name of this switch.</td></tr><tr><td><code>onCommand</code></td><td>String</td><td></td><td>Shell command that should be executed when the switch is turned on.</td></tr><tr><td><code>offCommand</code></td><td>String</td><td></td><td>Shell command that should be executed when the switch is turned off.</td></tr><tr><td><code>icon</code></td><td>String</td><td></td><td>Icon that the sensor should be represented with in Home Assistant Core.</td></tr></tbody></table><details class="custom-container details"><summary>Example Config</summary><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">global</span><span class="token punctuation">:</span>\n  <span class="token key atrule">integrations</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> shell\n<span class="token key atrule">shell</span><span class="token punctuation">:</span>\n  <span class="token key atrule">sensors</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Kitchen Wifi Strength\n      <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token string">&#39;iwconfig wlan0 | grep -i quality&#39;</span>\n      <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token string">&#39;Signal level=(-?[0-9]+) dBm&#39;</span>\n      <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">&#39;* * * * *&#39;</span>\n      <span class="token key atrule">icon</span><span class="token punctuation">:</span> mdi<span class="token punctuation">:</span>wifi\n      <span class="token key atrule">unitOfMeasurement</span><span class="token punctuation">:</span> dBm\n      <span class="token key atrule">deviceClass</span><span class="token punctuation">:</span> signal_strength\n  <span class="token key atrule">switches</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Onboard LED\n      <span class="token key atrule">onCommand</span><span class="token punctuation">:</span> <span class="token string">&#39;echo mmc0 | sudo tee /sys/class/leds/led0/trigger&#39;</span>\n      <span class="token key atrule">offCommand</span><span class="token punctuation">:</span> <span class="token string">&#39;echo none | sudo tee /sys/class/leds/led0/trigger &amp;&amp; echo 1 | sudo tee /sys/class/leds/led0/brightness&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details>',3),x={render:function(n,s){const t=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[a,(0,e.Wm)("table",null,[l,(0,e.Wm)("tbody",null,[o,r,d,(0,e.Wm)("tr",null,[i,u,c,(0,e.Wm)("td",null,[(0,e.Wm)("a",p,[m,(0,e.Wm)(t)]),h])]),k,g,(0,e.Wm)("tr",null,[b,W,f,(0,e.Wm)("td",null,[y,(0,e.Wm)("a",w,[S,(0,e.Wm)(t)]),v])])])]),C],64)}}}}]);